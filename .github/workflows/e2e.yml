name: End-to-End
on:
  pull_request:

jobs:
  e2e:
    name: Run examples
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: 1.24
          cache: true

      - name: Set up cache for dependencies
        uses: actions/cache@v4
        with:
          path: |
            grpcurl
            grpctestify.sh
          key: deps-cache-${{ runner.os }}-v1

      - name: Install dependencies
        run: |
          if ! which jq >/dev/null 2>&1; then
            sudo apt-get update && sudo apt-get install -y jq
          fi

          if [ ! -f grpcurl ]; then
            curl -sSL "https://github.com/fullstorydev/grpcurl/releases/download/v1.9.3/grpcurl_1.9.3_linux_x86_64.tar.gz" | tar -xz
            chmod +x grpcurl
          fi
          echo "$(pwd)" >> $GITHUB_PATH

          if [ ! -f grpctestify.sh ]; then
            curl -sSL https://raw.githubusercontent.com/gripmock/grpctestify/v0.0.8/grpctestify.sh -o grpctestify.sh
            chmod +x grpctestify.sh
          fi

      - name: Build GripMock Server
        run: |
          go build -o /tmp/gripmock .
          chmod +x /tmp/gripmock

      - name: Start GripMock Server
        run: |
          find . -name "*.proto.src" -type f -delete
          /tmp/gripmock --stub=examples examples &
          echo $! > /tmp/gripmock.pid
          max_wait=60
          waited=0
          until grpcurl -plaintext localhost:4770 list; do
            if [ $waited -ge $max_wait ]; then
              echo "GripMock server failed to start within $max_wait seconds."
              exit 1
            fi
            sleep 1
            waited=$((waited + 1))
          done

      - name: Run examples
        run: |
          ./grpctestify.sh examples/

      - name: Stop GripMock Server
        run: |
          kill $(cat /tmp/gripmock.pid) || true
          rm /tmp/gripmock.pid || true

name: builder

on:
  pull_request:
  push:
    branches:
      - "master"
    tags:
      - "v*.*.*"

jobs:
  docker:
    runs-on: ubuntu-latest
    steps:
      -
        name: Checkout
        uses: actions/checkout@v4
      - name: Install Slim
        run: curl -sL https://raw.githubusercontent.com/slimtoolkit/slim/master/scripts/install-slim.sh | sudo -E bash -
      -
        name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            bavix/gripmock
            ghcr.io/bavix/gripmock
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      -
        name: Login to GitHub Container Registry
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      -
        name: Login to Dockerhub Container Registry
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_LOGIN }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      -
        name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: .
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          # platforms: linux/amd64,linux/arm64
          build-args: |
            version=${{ github.ref_name }}
          outputs: type=image,name=target,annotation-index.org.opencontainers.image.description=gRPC Mock Server
      -
        name: Extract first tag
        id: first_tag
        run: echo "TAG=$(echo ${{ steps.meta.outputs.tags }} | cut -d ',' -f1)" >> $GITHUB_OUTPUT
      -
        name: Verify image exists
        run: docker images | grep "${{ steps.first_tag.outputs.TAG }}"
      -
        name: Build slim version
        run: |
          make build-slim target_image=${{ steps.meta.outputs.tags }}

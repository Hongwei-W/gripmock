name: builder

on:
  pull_request:
  push:
    branches:
      - "master"
    tags:
      - "v*.*.*"

jobs:
  docker:
    runs-on: ubuntu-latest
    services:
      registry:
        image: registry:2
        ports:
          - 6000:5000
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install jq
        run: sudo apt-get install -y jq

      - name: Install Slim
        run: curl -sL https://raw.githubusercontent.com/slimtoolkit/slim/master/scripts/install-slim.sh | sudo -E bash -

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx with insecure registry
        uses: docker/setup-buildx-action@v3
        with:
          buildkitd-config-inline: |
            [registry."localhost:6000"]
              http = true
              insecure = true

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            localhost:6000/bavix/gripmock
            bavix/gripmock
            ghcr.io/bavix/gripmock
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}

      - name: Login to GitHub Container Registry
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Login to Dockerhub Container Registry
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_LOGIN }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          load: true
          context: .
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          platforms: linux/amd64,linux/arm64
          build-args: |
            version=${{ github.ref_name }}
          outputs: type=image,name=target,annotation-index.org.opencontainers.image.description=gRPC Mock Server

      - name: Build manifest slim version
        run: |
          echo "$DOCKER_METADATA_OUTPUT_JSON" | jq -r '.tags[]' | while IFS= read -r tag; do
            docker tag $tag localhost:6000/bavix/gripmock:latest;
            break
          done;

          make build-slim target_image="localhost:6000/bavix/gripmock:latest" arch=arm64;
          make build-slim target_image="localhost:6000/bavix/gripmock:latest" arch=amd64;

          docker push "localhost:6000/bavix/gripmock:latest-slim-amd64";
          docker push "localhost:6000/bavix/gripmock:latest-slim-arm64";

          docker manifest create "localhost:6000/bavix/gripmock:latest-slim" \
            --amend "localhost:6000/bavix/gripmock:latest-slim-arm64" \
            --amend "localhost:6000/bavix/gripmock:latest-slim-amd64";

          echo "$DOCKER_METADATA_OUTPUT_JSON" | jq -r '.tags[]' | while IFS= read -r tag; do
            docker tag localhost:6000/bavix/gripmock:latest-slim "${tag}-slim";
          done;

      - name: Push manifest slim version
        if: github.event_name != 'pull_request'
        run: |
          echo "$DOCKER_METADATA_OUTPUT_JSON" | jq -r '.tags[]' | while IFS= read -r tag; do
            docker push "$tag-slim";
          done